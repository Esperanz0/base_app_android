apply plugin: 'com.android.library'
apply plugin: 'android-apt'
apply plugin: 'me.tatarka.retrolambda'


buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath rootProject.ext.buildScriptDependencies.androidApt
        classpath rootProject.ext.buildScriptDependencies.retrolambda
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // retrolambda
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName rootProject.ext.applicationId
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':domain')

    def dataDependencies = rootProject.ext.dataDependencies

    compile dataDependencies.retrofitreactive
    compile dataDependencies.retrofitGson

    apt dataDependencies.daggerCompiler
    compile dataDependencies.dagger
    provided dataDependencies.javaxAnnotation

    compile dataDependencies.rxJava

    compile dataDependencies.supportAppCompat


    def dataTestDependencies = rootProject.ext.dataTestDependencies

    testCompile dataTestDependencies.junit
    testCompile dataTestDependencies.mockito
    testCompile dataTestDependencies.hamcrest
    testCompile dataTestDependencies.robolectric
}
